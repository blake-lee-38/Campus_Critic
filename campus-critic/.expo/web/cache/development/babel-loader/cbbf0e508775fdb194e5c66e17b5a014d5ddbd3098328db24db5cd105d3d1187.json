{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect } from 'react';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RNGoogleSigninButton } from \"./RNGoogleSiginButton\";\nvar RNGoogleSignin = NativeModules.RNGoogleSignin;\nexport var GoogleSigninButton = function GoogleSigninButton(_ref) {\n  var onPress = _ref.onPress,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  useEffect(function () {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    var clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', function () {\n      onPress === null || onPress === void 0 ? void 0 : onPress();\n    });\n    return function () {\n      clickListener.remove();\n    };\n  }, [onPress]);\n  var recommendedSize = function () {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  }();\n  return React.createElement(RNGoogleSigninButton, _extends({}, rest, {\n    onPress: onPress,\n    style: [recommendedSize, style]\n  }));\n};\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE\n};\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT\n};\nvar styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48\n  },\n  standardSize: {\n    width: 230,\n    height: 48\n  },\n  wideSize: {\n    width: 312,\n    height: 48\n  }\n});","map":{"version":3,"names":["React","useEffect","NativeModules","Platform","DeviceEventEmitter","StyleSheet","RNGoogleSigninButton","RNGoogleSignin","GoogleSigninButton","_ref","onPress","style","rest","_objectWithoutProperties","_excluded","OS","clickListener","addListener","remove","recommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","createElement","_extends","Size","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Color","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","create","width","height"],"sources":["C:\\Users\\Blake\\Desktop\\VS-Code-Projects\\Campus_Critic\\campus-critic\\node_modules\\@react-native-google-signin\\google-signin\\src\\GoogleSigninButton.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { GoogleSigninButtonProps } from './types';\n\ninterface RNGoogleSignStaticsType {\n  BUTTON_SIZE_STANDARD: number;\n  BUTTON_SIZE_WIDE: number;\n  BUTTON_SIZE_ICON: number;\n  BUTTON_COLOR_DARK: number;\n  BUTTON_COLOR_LIGHT: number;\n}\nconst RNGoogleSignin: RNGoogleSignStaticsType = NativeModules.RNGoogleSignin;\n\nexport const GoogleSigninButton = ({ onPress, style, ...rest }: GoogleSigninButtonProps) => {\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    const clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n      onPress?.();\n    });\n    return () => {\n      clickListener.remove();\n    };\n  }, [onPress]);\n\n  const recommendedSize = (() => {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  })();\n\n  // @ts-ignore style prop incompatible\n  return <RNGoogleSigninButton {...rest} onPress={onPress} style={[recommendedSize, style]} />;\n};\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n};\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,OAAAC,aAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,UAAA;AAGxC,SAASC,oBAAoB;AAU7B,IAAMC,cAAuC,GAAGL,aAAa,CAACK,cAAc;AAE5E,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAGC,IAAA,EAA0D;EAAA,IAAvDC,OAAO,GAA2CD,IAAA,CAAlDC,OAAO;IAAEC,KAAK,GAAoCF,IAAA,CAAzCE,KAAK;IAAKC,IAAA,GAAAC,wBAAA,CAA+BJ,IAAA,EAAAK,SAAA;EACrFb,SAAS,CAAC,YAAM;IACd,IAAIE,QAAQ,CAACY,EAAE,KAAK,KAAK,EAAE;MACzB;IACF;IACA,IAAMC,aAAa,GAAGZ,kBAAkB,CAACa,WAAW,CAAC,6BAA6B,EAAE,YAAM;MACxFP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,CAAC;IACb,CAAC,CAAC;IACF,OAAO,YAAM;MACXM,aAAa,CAACE,MAAM,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,IAAMS,eAAe,GAAI,YAAM;IAC7B,QAAQP,IAAI,CAACQ,IAAI;MACf,KAAKb,cAAc,CAACc,gBAAgB;QAClC,OAAOC,MAAM,CAACC,QAAQ;MACxB,KAAKhB,cAAc,CAACiB,gBAAgB;QAClC,OAAOF,MAAM,CAACG,QAAQ;MACxB;QACE,OAAOH,MAAM,CAACI,YAAY;IAC9B;EACF,CAAC,CAAE,CAAC;EAGJ,OAAO1B,KAAA,CAAA2B,aAAA,CAACrB,oBAAoB,EAAAsB,QAAA,KAAKhB,IAAI;IAAEF,OAAO,EAAEA,OAAQ;IAACC,KAAK,EAAE,CAACQ,eAAe,EAAER,KAAK;EAAE,EAAE,CAAC;AAC9F,CAAC;AAEDH,kBAAkB,CAACqB,IAAI,GAAG;EACxBC,IAAI,EAAEvB,cAAc,CAACc,gBAAgB;EACrCU,QAAQ,EAAExB,cAAc,CAACyB,oBAAoB;EAC7CC,IAAI,EAAE1B,cAAc,CAACiB;AACvB,CAAC;AAEDhB,kBAAkB,CAAC0B,KAAK,GAAG;EACzBC,IAAI,EAAE5B,cAAc,CAAC6B,iBAAiB;EACtCC,KAAK,EAAE9B,cAAc,CAAC+B;AACxB,CAAC;AAGD,IAAMhB,MAAM,GAAGjB,UAAU,CAACkC,MAAM,CAAC;EAC/BhB,QAAQ,EAAE;IACRiB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDf,YAAY,EAAE;IAAEc,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAG,CAAC;EACxChB,QAAQ,EAAE;IAAEe,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAG;AACrC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}