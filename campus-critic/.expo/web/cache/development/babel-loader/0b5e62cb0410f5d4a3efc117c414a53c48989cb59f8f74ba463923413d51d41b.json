{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { signUp } from \"../methods/auth\";\nimport { GoogleAuthProvider, onAuthStateChanged, signInWithCredential } from \"firebase/auth\";\nimport { auth } from \"../config/firebaseConfig\";\nimport { GoogleSignin, statusCodes, GoogleSigninButton } from \"@react-native-google-signin/google-signin\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp(_ref) {\n  var _this = this;\n  var promptAsync = _ref.promptAsync;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorMessage = _useState10[0],\n    setErrorMessage = _useState10[1];\n  var onHandleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var signUpResult = yield signUp(email, password);\n      if (signUpResult.message === \"Success\") {\n        console.log(\"User created!\", signUpResult.user);\n      } else {\n        setErrorMessage(signUpResult.message);\n        console.log(signUpResult.message);\n      }\n    });\n    return function onHandleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onGoogleButtonPress = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var result = yield Expo.Google.logInAsync({\n          androidClientId: \"Your Client ID\",\n          scopes: [\"profile\", \"email\"]\n        });\n        if (result.type === \"success\") {\n          var credential = firebase.auth.GoogleAuthProvider.credential(result.idToken, result.accessToken);\n          firebase.auth().signInAndRetrieveDataWithCredential(credential).then(function (result) {\n            console.log(result);\n          });\n          _this.props.navigation.navigate(\"Where you want to go\");\n        } else {\n          console.log(\"cancelled\");\n        }\n      } catch (e) {\n        console.log(\"error\", e);\n      }\n    });\n    return function onGoogleButtonPress() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: \"Sign Up\"\n      }), _jsxs(SafeAreaView, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter name\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          textContentType: \"name\",\n          value: name,\n          onChangeText: function onChangeText(text) {\n            return setName(text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter email\",\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\",\n          textContentType: \"emailAddress\",\n          autoFocus: true,\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter password\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          showSoftInputOnFocus: false,\n          secureTextEntry: true,\n          textContentType: \"password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Confirm Password\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          showSoftInputOnFocus: false,\n          secureTextEntry: true,\n          textContentType: \"password\",\n          value: confirmPassword,\n          onChangeText: function onChangeText(text) {\n            return setConfirmPassword(text);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: onHandleSignUp,\n          children: _jsx(Text, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"#fff\",\n              fontSize: 18\n            },\n            children: \"Sign Up\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return onGoogleButtonPress().then(function () {\n              return console.log(\"Sign in with Google!\");\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: \"bold\",\n              color: \"#fff\",\n              fontSize: 18\n            },\n            children: \"Sign Up WITH GOOGLE\"\n          })\n        }), _jsxs(View, {\n          style: {\n            marginTop: 20,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            alignSelf: \"center\"\n          },\n          children: [_jsxs(Text, {\n            style: {\n              color: \"gray\",\n              fontWeight: \"600\",\n              fontSize: 14\n            },\n            children: [\"Don't have an account?\", \" \"]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(Text, {\n              style: {\n                color: \"#f57c00\",\n                fontWeight: \"600\",\n                fontSize: 14\n              },\n              children: \"Log In\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    flex: 1,\n    backgroundColor: \"lightblue\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    width: 200\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","SafeAreaView","View","TextInput","TouchableOpacity","Alert","signUp","GoogleAuthProvider","onAuthStateChanged","signInWithCredential","auth","GoogleSignin","statusCodes","GoogleSigninButton","jsx","_jsx","jsxs","_jsxs","SignUp","_ref","_this","promptAsync","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","errorMessage","setErrorMessage","onHandleSignUp","_ref2","_asyncToGenerator","signUpResult","message","console","log","user","apply","arguments","onGoogleButtonPress","_ref3","result","Expo","Google","logInAsync","androidClientId","scopes","type","credential","firebase","idToken","accessToken","signInAndRetrieveDataWithCredential","then","props","navigation","navigate","e","style","styles","container","children","input","placeholder","autoCapitalize","autoCorrect","textContentType","value","onChangeText","text","keyboardType","autoFocus","showSoftInputOnFocus","secureTextEntry","button","onPress","fontWeight","color","fontSize","marginTop","flexDirection","alignItems","alignSelf","create","flex","backgroundColor","justifyContent","height","borderColor","borderWidth","paddingHorizontal","width"],"sources":["C:/Users/Blake/Desktop/VS-Code-Projects/Campus_Critic/campus-critic/components/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  SafeAreaView,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { signUp } from \"../methods/auth\";\r\nimport {\r\n  GoogleAuthProvider,\r\n  onAuthStateChanged,\r\n  signInWithCredential,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../config/firebaseConfig\";\r\nimport {\r\n  GoogleSignin,\r\n  statusCodes,\r\n  GoogleSigninButton,\r\n} from \"@react-native-google-signin/google-signin\";\r\n\r\nexport default function SignUp({ promptAsync }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const onHandleSignUp = async () => {\r\n    const signUpResult = await signUp(email, password);\r\n    if (signUpResult.message === \"Success\") {\r\n      console.log(\"User created!\", signUpResult.user);\r\n    } else {\r\n      setErrorMessage(signUpResult.message);\r\n      console.log(signUpResult.message);\r\n    }\r\n  };\r\n\r\n  const onGoogleButtonPress = async () => {\r\n    try {\r\n      const result = await Expo.Google.logInAsync({\r\n        androidClientId: \"Your Client ID\",\r\n        //iosClientId: YOUR_CLIENT_ID_HERE,  <-- if you use iOS\r\n        scopes: [\"profile\", \"email\"],\r\n      });\r\n      if (result.type === \"success\") {\r\n        const credential = firebase.auth.GoogleAuthProvider.credential(\r\n          result.idToken,\r\n          result.accessToken\r\n        );\r\n        firebase\r\n          .auth()\r\n          .signInAndRetrieveDataWithCredential(credential)\r\n          .then(function (result) {\r\n            console.log(result);\r\n          });\r\n        this.props.navigation.navigate(\"Where you want to go\");\r\n      } else {\r\n        console.log(\"cancelled\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.container}>\r\n        <Text>Sign Up</Text>\r\n\r\n        <SafeAreaView>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter name\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            textContentType=\"name\"\r\n            value={name}\r\n            onChangeText={(text) => setName(text)}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter email\"\r\n            autoCapitalize=\"none\"\r\n            keyboardType=\"email-address\"\r\n            textContentType=\"emailAddress\"\r\n            autoFocus={true}\r\n            value={email}\r\n            onChangeText={(text) => setEmail(text)}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter password\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            showSoftInputOnFocus={false}\r\n            secureTextEntry={true}\r\n            textContentType=\"password\"\r\n            value={password}\r\n            onChangeText={(text) => setPassword(text)}\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Confirm Password\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            showSoftInputOnFocus={false}\r\n            secureTextEntry={true}\r\n            textContentType=\"password\"\r\n            value={confirmPassword}\r\n            onChangeText={(text) => setConfirmPassword(text)}\r\n          />\r\n\r\n          <TouchableOpacity style={styles.button} onPress={onHandleSignUp}>\r\n            <Text style={{ fontWeight: \"bold\", color: \"#fff\", fontSize: 18 }}>\r\n              Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() =>\r\n              onGoogleButtonPress().then(() =>\r\n                console.log(\"Sign in with Google!\")\r\n              )\r\n            }\r\n          >\r\n            <Text style={{ fontWeight: \"bold\", color: \"#fff\", fontSize: 18 }}>\r\n              Sign Up WITH GOOGLE\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Navigation to Login Screen */}\r\n          <View\r\n            style={{\r\n              marginTop: 20,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Text style={{ color: \"gray\", fontWeight: \"600\", fontSize: 14 }}>\r\n              Don't have an account?{\" \"}\r\n            </Text>\r\n            <TouchableOpacity onPress={() => {}}>\r\n              <Text\r\n                style={{ color: \"#f57c00\", fontWeight: \"600\", fontSize: 14 }}\r\n              >\r\n                Log In\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SafeAreaView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    backgroundColor: \"lightblue\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 10,\r\n    width: 200,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}