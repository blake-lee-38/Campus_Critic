{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isString } from '@react-native-firebase/app/lib/common';\nimport { firebase } from '..';\nvar Auth = function () {\n  function Auth(app) {\n    _classCallCheck(this, Auth);\n    this.app = app ? firebase.app(app.name) : firebase.app();\n    this._languageCode = this.app.auth().languageCode;\n  }\n  _createClass(Auth, [{\n    key: \"config\",\n    get: function get() {\n      return this.app.auth().config;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      return this.app.auth().currentUser;\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._languageCode;\n    },\n    set: function set(code) {\n      if (code === null || isString(code)) {\n        this._languageCode = code;\n        this.app.auth().languageCode = code;\n        return;\n      }\n      throw new Error(\"expected 'languageCode' to be a string or null value\");\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this.app.auth().settings;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this.app.auth().tenantId;\n    }\n  }]);\n  return Auth;\n}();\nexport function getAuth(app) {\n  return new Auth(app);\n}\nfunction _getUnderlyingAuth(auth) {\n  return auth.app.auth();\n}\nexport function initializeAuth(app, deps) {\n  return getAuth(app);\n}\nexport function applyActionCode(_x, _x2) {\n  return _applyActionCode.apply(this, arguments);\n}\nfunction _applyActionCode() {\n  _applyActionCode = _asyncToGenerator(function* (auth, oobCode) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.applyActionCode(oobCode);\n  });\n  return _applyActionCode.apply(this, arguments);\n}\nexport function beforeAuthStateChanged(auth, callback, onAbort) {\n  throw new Error('beforeAuthStateChanged is unsupported by the native Firebase SDKs');\n}\nexport function checkActionCode(_x3, _x4) {\n  return _checkActionCode.apply(this, arguments);\n}\nfunction _checkActionCode() {\n  _checkActionCode = _asyncToGenerator(function* (auth, oobCode) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.checkActionCode(oobCode);\n  });\n  return _checkActionCode.apply(this, arguments);\n}\nexport function confirmPasswordReset(_x5, _x6, _x7) {\n  return _confirmPasswordReset.apply(this, arguments);\n}\nfunction _confirmPasswordReset() {\n  _confirmPasswordReset = _asyncToGenerator(function* (auth, oobCode, newPassword) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.confirmPasswordReset(oobCode, newPassword);\n  });\n  return _confirmPasswordReset.apply(this, arguments);\n}\nexport function connectAuthEmulator(auth, url, options) {\n  var _auth = _getUnderlyingAuth(auth);\n  _auth.useEmulator(url, options);\n}\nexport function createUserWithEmailAndPassword(_x8, _x9, _x10) {\n  return _createUserWithEmailAndPassword.apply(this, arguments);\n}\nfunction _createUserWithEmailAndPassword() {\n  _createUserWithEmailAndPassword = _asyncToGenerator(function* (auth, email, password) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.createUserWithEmailAndPassword(email, password);\n  });\n  return _createUserWithEmailAndPassword.apply(this, arguments);\n}\nexport function fetchSignInMethodsForEmail(_x11, _x12) {\n  return _fetchSignInMethodsForEmail.apply(this, arguments);\n}\nfunction _fetchSignInMethodsForEmail() {\n  _fetchSignInMethodsForEmail = _asyncToGenerator(function* (auth, email) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.fetchSignInMethodsForEmail(email);\n  });\n  return _fetchSignInMethodsForEmail.apply(this, arguments);\n}\nexport function getMultiFactorResolver(auth, error) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.getMultiFactorResolver(error);\n}\nexport function getRedirectResult(_x13, _x14) {\n  return _getRedirectResult.apply(this, arguments);\n}\nfunction _getRedirectResult() {\n  _getRedirectResult = _asyncToGenerator(function* (auth, resolver) {\n    throw new Error('getRedirectResult is unsupported by the native Firebase SDKs');\n  });\n  return _getRedirectResult.apply(this, arguments);\n}\nexport function isSignInWithEmailLink(auth, emailLink) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.isSignInWithEmailLink(emailLink);\n}\nexport function onAuthStateChanged(auth, nextOrObserver) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.onAuthStateChanged(nextOrObserver);\n}\nexport function onIdTokenChanged(auth, nextOrObserver) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.onIdTokenChanged(nextOrObserver);\n}\nexport function sendPasswordResetEmail(_x15, _x16, _x17) {\n  return _sendPasswordResetEmail.apply(this, arguments);\n}\nfunction _sendPasswordResetEmail() {\n  _sendPasswordResetEmail = _asyncToGenerator(function* (auth, email, actionCodeSettings) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.sendPasswordResetEmail(email, actionCodeSettings);\n  });\n  return _sendPasswordResetEmail.apply(this, arguments);\n}\nexport function sendSignInLinkToEmail(_x18, _x19, _x20) {\n  return _sendSignInLinkToEmail.apply(this, arguments);\n}\nfunction _sendSignInLinkToEmail() {\n  _sendSignInLinkToEmail = _asyncToGenerator(function* (auth, email, actionCodeSettings) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.sendSignInLinkToEmail(email, actionCodeSettings);\n  });\n  return _sendSignInLinkToEmail.apply(this, arguments);\n}\nexport function setPersistence(_x21, _x22) {\n  return _setPersistence.apply(this, arguments);\n}\nfunction _setPersistence() {\n  _setPersistence = _asyncToGenerator(function* (auth, persistence) {\n    throw new Error('setPersistence is unsupported by the native Firebase SDKs');\n  });\n  return _setPersistence.apply(this, arguments);\n}\nexport function signInAnonymously(_x23) {\n  return _signInAnonymously.apply(this, arguments);\n}\nfunction _signInAnonymously() {\n  _signInAnonymously = _asyncToGenerator(function* (auth) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInAnonymously();\n  });\n  return _signInAnonymously.apply(this, arguments);\n}\nexport function signInWithCredential(_x24, _x25) {\n  return _signInWithCredential.apply(this, arguments);\n}\nfunction _signInWithCredential() {\n  _signInWithCredential = _asyncToGenerator(function* (auth, credential) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithCredential(credential);\n  });\n  return _signInWithCredential.apply(this, arguments);\n}\nexport function signInWithCustomToken(_x26, _x27) {\n  return _signInWithCustomToken.apply(this, arguments);\n}\nfunction _signInWithCustomToken() {\n  _signInWithCustomToken = _asyncToGenerator(function* (auth, customToken) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithCustomToken(customToken);\n  });\n  return _signInWithCustomToken.apply(this, arguments);\n}\nexport function signInWithEmailAndPassword(_x28, _x29, _x30) {\n  return _signInWithEmailAndPassword.apply(this, arguments);\n}\nfunction _signInWithEmailAndPassword() {\n  _signInWithEmailAndPassword = _asyncToGenerator(function* (auth, email, password) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithEmailAndPassword(email, password);\n  });\n  return _signInWithEmailAndPassword.apply(this, arguments);\n}\nexport function signInWithEmailLink(_x31, _x32, _x33) {\n  return _signInWithEmailLink.apply(this, arguments);\n}\nfunction _signInWithEmailLink() {\n  _signInWithEmailLink = _asyncToGenerator(function* (auth, email, emailLink) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithEmailLink(email, emailLink);\n  });\n  return _signInWithEmailLink.apply(this, arguments);\n}\nexport function signInWithPhoneNumber(_x34, _x35, _x36) {\n  return _signInWithPhoneNumber.apply(this, arguments);\n}\nfunction _signInWithPhoneNumber() {\n  _signInWithPhoneNumber = _asyncToGenerator(function* (auth, phoneNumber, appVerifier) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithPhoneNumber(phoneNumber);\n  });\n  return _signInWithPhoneNumber.apply(this, arguments);\n}\nexport function verifyPhoneNumber(auth, phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend);\n}\nexport function signInWithPopup(_x37, _x38, _x39) {\n  return _signInWithPopup.apply(this, arguments);\n}\nfunction _signInWithPopup() {\n  _signInWithPopup = _asyncToGenerator(function* (auth, provider, resolver) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithPopup(provider, resolver);\n  });\n  return _signInWithPopup.apply(this, arguments);\n}\nexport function signInWithRedirect(_x40, _x41, _x42) {\n  return _signInWithRedirect.apply(this, arguments);\n}\nfunction _signInWithRedirect() {\n  _signInWithRedirect = _asyncToGenerator(function* (auth, provider, resolver) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signInWithRedirect(provider, resolver);\n  });\n  return _signInWithRedirect.apply(this, arguments);\n}\nexport function signOut(_x43) {\n  return _signOut.apply(this, arguments);\n}\nfunction _signOut() {\n  _signOut = _asyncToGenerator(function* (auth) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.signOut();\n  });\n  return _signOut.apply(this, arguments);\n}\nexport function updateCurrentUser(_x44, _x45) {\n  return _updateCurrentUser.apply(this, arguments);\n}\nfunction _updateCurrentUser() {\n  _updateCurrentUser = _asyncToGenerator(function* (auth, user) {\n    throw new Error('updateCurrentUser is unsupported by the native Firebase SDKs');\n  });\n  return _updateCurrentUser.apply(this, arguments);\n}\nexport function useDeviceLanguage(auth) {\n  throw new Error('useDeviceLanguage is unsupported by the native Firebase SDKs');\n}\nexport function useUserAccessGroup(auth, userAccessGroup) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.useUserAccessGroup(userAccessGroup);\n}\nexport function verifyPasswordResetCode(_x46, _x47) {\n  return _verifyPasswordResetCode.apply(this, arguments);\n}\nfunction _verifyPasswordResetCode() {\n  _verifyPasswordResetCode = _asyncToGenerator(function* (auth, code) {\n    var _auth = _getUnderlyingAuth(auth);\n    return _auth.verifyPasswordResetCode(code);\n  });\n  return _verifyPasswordResetCode.apply(this, arguments);\n}\nexport function parseActionCodeURL(link) {\n  throw new Error('parseActionCodeURL is unsupported by the native Firebase SDKs');\n}\nexport function deleteUser(_x48) {\n  return _deleteUser.apply(this, arguments);\n}\nfunction _deleteUser() {\n  _deleteUser = _asyncToGenerator(function* (user) {\n    return user.delete();\n  });\n  return _deleteUser.apply(this, arguments);\n}\nexport function getIdToken(_x49, _x50) {\n  return _getIdToken.apply(this, arguments);\n}\nfunction _getIdToken() {\n  _getIdToken = _asyncToGenerator(function* (user, forceRefresh) {\n    return user.getIdToken(forceRefresh);\n  });\n  return _getIdToken.apply(this, arguments);\n}\nexport function getIdTokenResult(_x51, _x52) {\n  return _getIdTokenResult.apply(this, arguments);\n}\nfunction _getIdTokenResult() {\n  _getIdTokenResult = _asyncToGenerator(function* (user, forceRefresh) {\n    return user.getIdTokenResult(forceRefresh);\n  });\n  return _getIdTokenResult.apply(this, arguments);\n}\nexport function linkWithCredential(_x53, _x54) {\n  return _linkWithCredential.apply(this, arguments);\n}\nfunction _linkWithCredential() {\n  _linkWithCredential = _asyncToGenerator(function* (user, credential) {\n    return user.linkWithCredential(credential);\n  });\n  return _linkWithCredential.apply(this, arguments);\n}\nexport function linkWithPhoneNumber(_x55, _x56, _x57) {\n  return _linkWithPhoneNumber.apply(this, arguments);\n}\nfunction _linkWithPhoneNumber() {\n  _linkWithPhoneNumber = _asyncToGenerator(function* (user, phoneNumber, appVerifier) {\n    throw new Error('linkWithPhoneNumber is unsupported by the native Firebase SDKs');\n  });\n  return _linkWithPhoneNumber.apply(this, arguments);\n}\nexport function linkWithPopup(_x58, _x59, _x60) {\n  return _linkWithPopup.apply(this, arguments);\n}\nfunction _linkWithPopup() {\n  _linkWithPopup = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.linkWithPopup(provider, resolver);\n  });\n  return _linkWithPopup.apply(this, arguments);\n}\nexport function linkWithRedirect(_x61, _x62, _x63) {\n  return _linkWithRedirect.apply(this, arguments);\n}\nfunction _linkWithRedirect() {\n  _linkWithRedirect = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.linkWithRedirect(provider, resolver);\n  });\n  return _linkWithRedirect.apply(this, arguments);\n}\nexport function multiFactor(user) {\n  return user._auth.multiFactor(user);\n}\nexport function reauthenticateWithCredential(_x64, _x65) {\n  return _reauthenticateWithCredential.apply(this, arguments);\n}\nfunction _reauthenticateWithCredential() {\n  _reauthenticateWithCredential = _asyncToGenerator(function* (user, credential) {\n    return user.reauthenticateWithCredential(credential);\n  });\n  return _reauthenticateWithCredential.apply(this, arguments);\n}\nexport function reauthenticateWithPhoneNumber(_x66, _x67, _x68) {\n  return _reauthenticateWithPhoneNumber.apply(this, arguments);\n}\nfunction _reauthenticateWithPhoneNumber() {\n  _reauthenticateWithPhoneNumber = _asyncToGenerator(function* (user, phoneNumber, appVerifier) {\n    throw new Error('reauthenticateWithPhoneNumber is unsupported by the native Firebase SDKs');\n  });\n  return _reauthenticateWithPhoneNumber.apply(this, arguments);\n}\nexport function reauthenticateWithPopup(_x69, _x70, _x71) {\n  return _reauthenticateWithPopup.apply(this, arguments);\n}\nfunction _reauthenticateWithPopup() {\n  _reauthenticateWithPopup = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.reauthenticateWithPopup(provider, resolver);\n  });\n  return _reauthenticateWithPopup.apply(this, arguments);\n}\nexport function reauthenticateWithRedirect(_x72, _x73, _x74) {\n  return _reauthenticateWithRedirect.apply(this, arguments);\n}\nfunction _reauthenticateWithRedirect() {\n  _reauthenticateWithRedirect = _asyncToGenerator(function* (user, provider, resolver) {\n    return user.reauthenticateWithRedirect(provider, resolver);\n  });\n  return _reauthenticateWithRedirect.apply(this, arguments);\n}\nexport function reload(_x75) {\n  return _reload.apply(this, arguments);\n}\nfunction _reload() {\n  _reload = _asyncToGenerator(function* (user) {\n    return user.reload();\n  });\n  return _reload.apply(this, arguments);\n}\nexport function sendEmailVerification(_x76, _x77) {\n  return _sendEmailVerification.apply(this, arguments);\n}\nfunction _sendEmailVerification() {\n  _sendEmailVerification = _asyncToGenerator(function* (user, actionCodeSettings) {\n    return user.sendEmailVerification(actionCodeSettings);\n  });\n  return _sendEmailVerification.apply(this, arguments);\n}\nexport function unlink(_x78, _x79) {\n  return _unlink.apply(this, arguments);\n}\nfunction _unlink() {\n  _unlink = _asyncToGenerator(function* (user, providerId) {\n    return user.unlink(providerId);\n  });\n  return _unlink.apply(this, arguments);\n}\nexport function updateEmail(_x80, _x81) {\n  return _updateEmail.apply(this, arguments);\n}\nfunction _updateEmail() {\n  _updateEmail = _asyncToGenerator(function* (user, newEmail) {\n    return user.updateEmail(newEmail);\n  });\n  return _updateEmail.apply(this, arguments);\n}\nexport function updatePassword(_x82, _x83) {\n  return _updatePassword.apply(this, arguments);\n}\nfunction _updatePassword() {\n  _updatePassword = _asyncToGenerator(function* (user, newPassword) {\n    return user.updatePassword(newPassword);\n  });\n  return _updatePassword.apply(this, arguments);\n}\nexport function updatePhoneNumber(_x84, _x85) {\n  return _updatePhoneNumber.apply(this, arguments);\n}\nfunction _updatePhoneNumber() {\n  _updatePhoneNumber = _asyncToGenerator(function* (user, credential) {\n    return user.updatePhoneNumber(credential);\n  });\n  return _updatePhoneNumber.apply(this, arguments);\n}\nexport function updateProfile(_x86, _x87) {\n  return _updateProfile.apply(this, arguments);\n}\nfunction _updateProfile() {\n  _updateProfile = _asyncToGenerator(function* (user, _ref) {\n    var displayName = _ref.displayName,\n      photoUrl = _ref.photoURL;\n    return user.updateProfile({\n      displayName: displayName,\n      photoURL: photoUrl\n    });\n  });\n  return _updateProfile.apply(this, arguments);\n}\nexport function verifyBeforeUpdateEmail(_x88, _x89, _x90) {\n  return _verifyBeforeUpdateEmail.apply(this, arguments);\n}\nfunction _verifyBeforeUpdateEmail() {\n  _verifyBeforeUpdateEmail = _asyncToGenerator(function* (user, newEmail, actionCodeSettings) {\n    return user.verifyBeforeUpdateEmail(newEmail, actionCodeSettings);\n  });\n  return _verifyBeforeUpdateEmail.apply(this, arguments);\n}\nexport function getAdditionalUserInfo(userCredential) {\n  return userCredential.additionalUserInfo;\n}\nexport function getCustomAuthDomain(auth) {\n  var _auth = _getUnderlyingAuth(auth);\n  return _auth.getCustomAuthDomain();\n}","map":{"version":3,"names":["isString","firebase","Auth","app","_classCallCheck","name","_languageCode","auth","languageCode","_createClass","key","get","config","currentUser","set","code","Error","settings","tenantId","getAuth","_getUnderlyingAuth","initializeAuth","deps","applyActionCode","_x","_x2","_applyActionCode","apply","arguments","_asyncToGenerator","oobCode","_auth","beforeAuthStateChanged","callback","onAbort","checkActionCode","_x3","_x4","_checkActionCode","confirmPasswordReset","_x5","_x6","_x7","_confirmPasswordReset","newPassword","connectAuthEmulator","url","options","useEmulator","createUserWithEmailAndPassword","_x8","_x9","_x10","_createUserWithEmailAndPassword","email","password","fetchSignInMethodsForEmail","_x11","_x12","_fetchSignInMethodsForEmail","getMultiFactorResolver","error","getRedirectResult","_x13","_x14","_getRedirectResult","resolver","isSignInWithEmailLink","emailLink","onAuthStateChanged","nextOrObserver","onIdTokenChanged","sendPasswordResetEmail","_x15","_x16","_x17","_sendPasswordResetEmail","actionCodeSettings","sendSignInLinkToEmail","_x18","_x19","_x20","_sendSignInLinkToEmail","setPersistence","_x21","_x22","_setPersistence","persistence","signInAnonymously","_x23","_signInAnonymously","signInWithCredential","_x24","_x25","_signInWithCredential","credential","signInWithCustomToken","_x26","_x27","_signInWithCustomToken","customToken","signInWithEmailAndPassword","_x28","_x29","_x30","_signInWithEmailAndPassword","signInWithEmailLink","_x31","_x32","_x33","_signInWithEmailLink","signInWithPhoneNumber","_x34","_x35","_x36","_signInWithPhoneNumber","phoneNumber","appVerifier","verifyPhoneNumber","autoVerifyTimeoutOrForceResend","forceResend","signInWithPopup","_x37","_x38","_x39","_signInWithPopup","provider","signInWithRedirect","_x40","_x41","_x42","_signInWithRedirect","signOut","_x43","_signOut","updateCurrentUser","_x44","_x45","_updateCurrentUser","user","useDeviceLanguage","useUserAccessGroup","userAccessGroup","verifyPasswordResetCode","_x46","_x47","_verifyPasswordResetCode","parseActionCodeURL","link","deleteUser","_x48","_deleteUser","delete","getIdToken","_x49","_x50","_getIdToken","forceRefresh","getIdTokenResult","_x51","_x52","_getIdTokenResult","linkWithCredential","_x53","_x54","_linkWithCredential","linkWithPhoneNumber","_x55","_x56","_x57","_linkWithPhoneNumber","linkWithPopup","_x58","_x59","_x60","_linkWithPopup","linkWithRedirect","_x61","_x62","_x63","_linkWithRedirect","multiFactor","reauthenticateWithCredential","_x64","_x65","_reauthenticateWithCredential","reauthenticateWithPhoneNumber","_x66","_x67","_x68","_reauthenticateWithPhoneNumber","reauthenticateWithPopup","_x69","_x70","_x71","_reauthenticateWithPopup","reauthenticateWithRedirect","_x72","_x73","_x74","_reauthenticateWithRedirect","reload","_x75","_reload","sendEmailVerification","_x76","_x77","_sendEmailVerification","unlink","_x78","_x79","_unlink","providerId","updateEmail","_x80","_x81","_updateEmail","newEmail","updatePassword","_x82","_x83","_updatePassword","updatePhoneNumber","_x84","_x85","_updatePhoneNumber","updateProfile","_x86","_x87","_updateProfile","_ref","displayName","photoUrl","photoURL","verifyBeforeUpdateEmail","_x88","_x89","_x90","_verifyBeforeUpdateEmail","getAdditionalUserInfo","userCredential","additionalUserInfo","getCustomAuthDomain"],"sources":["C:/Users/Blake/Desktop/VS-Code-Projects/Campus_Critic/node_modules/@react-native-firebase/auth/lib/modular/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isString } from '@react-native-firebase/app/lib/common';\nimport { firebase } from '..';\n\n/*\n * Returns the Auth instance associated with the provided FirebaseApp.\n */\nclass Auth {\n  constructor(app) {\n    this.app = app ? firebase.app(app.name) : firebase.app();\n    this._languageCode = this.app.auth().languageCode;\n  }\n\n  get config() {\n    return this.app.auth().config;\n  }\n\n  get currentUser() {\n    return this.app.auth().currentUser;\n  }\n\n  get languageCode() {\n    return this._languageCode;\n  }\n\n  set languageCode(code) {\n    if (code === null || isString(code)) {\n      this._languageCode = code;\n      this.app.auth().languageCode = code;\n      return;\n    }\n    throw new Error(\"expected 'languageCode' to be a string or null value\");\n  }\n\n  get settings() {\n    return this.app.auth().settings;\n  }\n\n  get tenantId() {\n    return this.app.auth().tenantId;\n  }\n}\n\n/*\n * Returns the Auth instance associated with the provided FirebaseApp.\n *\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n */\nexport function getAuth(app) {\n  return new Auth(app);\n}\n\nfunction _getUnderlyingAuth(auth) {\n  return auth.app.auth();\n}\n\n/*\n * This function allows more control over the Auth instance than getAuth().\n *\n * getAuth uses platform-specific defaults to supply the Dependencies.\n * In general, getAuth is the easiest way to initialize Auth and works for most use cases.\n * Use initializeAuth if you need control over which persistence layer is used, or to minimize bundle size\n * if you're not using either signInWithPopup or signInWithRedirect.\n */\nexport function initializeAuth(app, deps) {\n  return getAuth(app);\n}\n\n/*\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * Returns a promise that resolves when the code is applied successfully.\n */\nexport async function applyActionCode(auth, oobCode) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.applyActionCode(oobCode);\n}\n\n/*\n * Adds a blocking callback that runs before an auth state change sets a new user.\n */\nexport function beforeAuthStateChanged(auth, callback, onAbort) {\n  throw new Error('beforeAuthStateChanged is unsupported by the native Firebase SDKs');\n}\n\n/*\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n */\nexport async function checkActionCode(auth, oobCode) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.checkActionCode(oobCode);\n}\n\n/*\n * Completes the password reset process, given a confirmation code and new password.\n */\nexport async function confirmPasswordReset(auth, oobCode, newPassword) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.confirmPasswordReset(oobCode, newPassword);\n}\n\n/*\n * Changes the Auth instance to communicate with the Firebase Auth Emulator, instead of production Firebase Auth services.\n *\n * This must be called synchronously immediately following the first call to initializeAuth(). Do not use with production credentials as emulator traffic is not encrypted.\n */\nexport function connectAuthEmulator(auth, url, options) {\n  const _auth = _getUnderlyingAuth(auth);\n  _auth.useEmulator(url, options);\n}\n\n/*\n * Creates a new user account associated with the specified email address and password.\n */\nexport async function createUserWithEmailAndPassword(auth, email, password) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.createUserWithEmailAndPassword(email, password);\n}\n\n/*\n * Gets the list of possible sign in methods for the given email address.\n */\nexport async function fetchSignInMethodsForEmail(auth, email) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.fetchSignInMethodsForEmail(email);\n}\n\n/*\n * Provides a MultiFactorResolver suitable for completion of a multi-factor flow.\n */\nexport function getMultiFactorResolver(auth, error) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.getMultiFactorResolver(error);\n}\n\n/*\n * Returns a UserCredential from the redirect-based sign-in flow.\n */\nexport async function getRedirectResult(auth, resolver) {\n  throw new Error('getRedirectResult is unsupported by the native Firebase SDKs');\n}\n\n/*\n * Checks if an incoming link is a sign-in with email link suitable for signInWithEmailLink().\n */\nexport function isSignInWithEmailLink(auth, emailLink) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.isSignInWithEmailLink(emailLink);\n}\n\n/*\n * Adds an observer for changes to the user's sign-in state.\n */\nexport function onAuthStateChanged(auth, nextOrObserver) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.onAuthStateChanged(nextOrObserver);\n}\n\n/*\n * Adds an observer for changes to the signed-in user's ID token.\n */\nexport function onIdTokenChanged(auth, nextOrObserver) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.onIdTokenChanged(nextOrObserver);\n}\n\n/*\n * Sends a password reset email to the given email address.\n */\nexport async function sendPasswordResetEmail(auth, email, actionCodeSettings) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.sendPasswordResetEmail(email, actionCodeSettings);\n}\n\n/*\n * Sends a sign-in email link to the user with the specified email.\n */\nexport async function sendSignInLinkToEmail(auth, email, actionCodeSettings) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.sendSignInLinkToEmail(email, actionCodeSettings);\n}\n\n/*\n * Changes the type of persistence on the Auth instance for the currently saved Auth session and applies this type of persistence for future sign-in requests, including sign-in with redirect requests.\n */\nexport async function setPersistence(auth, persistence) {\n  throw new Error('setPersistence is unsupported by the native Firebase SDKs');\n}\n\n/*\n * Asynchronously signs in as an anonymous user.\n */\nexport async function signInAnonymously(auth) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInAnonymously();\n}\n\n/*\n * Asynchronously signs in with the given credentials.\n */\nexport async function signInWithCredential(auth, credential) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithCredential(credential);\n}\n\n/*\n * Asynchronously signs in using a custom token.\n */\nexport async function signInWithCustomToken(auth, customToken) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithCustomToken(customToken);\n}\n\n/*\n * Asynchronously signs in using an email and password.\n */\nexport async function signInWithEmailAndPassword(auth, email, password) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithEmailAndPassword(email, password);\n}\n\n/*\n * Asynchronously signs in using an email and sign-in email link.\n */\nexport async function signInWithEmailLink(auth, email, emailLink) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithEmailLink(email, emailLink);\n}\n\n/*\n * Asynchronously signs in using a phone number.\n */\nexport async function signInWithPhoneNumber(auth, phoneNumber, appVerifier) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithPhoneNumber(phoneNumber);\n}\n\n/*\n * Asynchronously signs in using a phone number.\n */\nexport function verifyPhoneNumber(auth, phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend);\n}\n\n/*\nAuthenticates a Firebase client using a popup-based OAuth authentication flow.\n*/\nexport async function signInWithPopup(auth, provider, resolver) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithPopup(provider, resolver);\n}\n\n/*\nAuthenticates a Firebase client using a full-page redirect flow.\n*/\nexport async function signInWithRedirect(auth, provider, resolver) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signInWithRedirect(provider, resolver);\n}\n\n/*\nSigns out the current user.\n*/\nexport async function signOut(auth) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.signOut();\n}\n\n/*\nAsynchronously sets the provided user as Auth.currentUser on the Auth instance.\n*/\nexport async function updateCurrentUser(auth, user) {\n  throw new Error('updateCurrentUser is unsupported by the native Firebase SDKs');\n}\n\n/*\nSets the current language to the default device/browser preference.\n*/\nexport function useDeviceLanguage(auth) {\n  throw new Error('useDeviceLanguage is unsupported by the native Firebase SDKs');\n}\n\n/*\n Sets the current language to the default device/browser preference.\n*/\nexport function useUserAccessGroup(auth, userAccessGroup) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.useUserAccessGroup(userAccessGroup);\n}\n\n/*\nVerifies the password reset code sent to the user by email or other out-of-band mechanism.\n*/\nexport async function verifyPasswordResetCode(auth, code) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.verifyPasswordResetCode(code);\n}\n\n/*\n * Parses the email action link string and returns an ActionCodeURL if the link is valid, otherwise returns null.\n */\nexport function parseActionCodeURL(link) {\n  throw new Error('parseActionCodeURL is unsupported by the native Firebase SDKs');\n}\n\n/*\n * Deletes and signs out the user.\n */\nexport async function deleteUser(user) {\n  return user.delete();\n}\n\n/*\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n */\nexport async function getIdToken(user, forceRefresh) {\n  return user.getIdToken(forceRefresh);\n}\n\n/*\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n */\nexport async function getIdTokenResult(user, forceRefresh) {\n  return user.getIdTokenResult(forceRefresh);\n}\n\n/*\n * Links the user account with the given credentials.\n */\nexport async function linkWithCredential(user, credential) {\n  return user.linkWithCredential(credential);\n}\n\n/*\n * Links the user account with the given phone number.\n */\nexport async function linkWithPhoneNumber(user, phoneNumber, appVerifier) {\n  throw new Error('linkWithPhoneNumber is unsupported by the native Firebase SDKs');\n}\n\n/*\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n */\nexport async function linkWithPopup(user, provider, resolver) {\n  return user.linkWithPopup(provider, resolver);\n}\n\n/*\n * Links the OAuthProvider to the user account using a full-page redirect flow.\n */\nexport async function linkWithRedirect(user, provider, resolver) {\n  return user.linkWithRedirect(provider, resolver);\n}\n\n/*\n * The MultiFactorUser corresponding to the user.\n */\nexport function multiFactor(user) {\n  return user._auth.multiFactor(user);\n}\n\n/*\n * Re-authenticates a user using a fresh credential.\n */\nexport async function reauthenticateWithCredential(user, credential) {\n  return user.reauthenticateWithCredential(credential);\n}\n\n/*\n * Re-authenticates a user using a fresh phone credential.\n */\nexport async function reauthenticateWithPhoneNumber(user, phoneNumber, appVerifier) {\n  throw new Error('reauthenticateWithPhoneNumber is unsupported by the native Firebase SDKs');\n}\n\n/*\n * Reauthenticates the current user with the specified OAuthProvider using a pop-up based OAuth flow.\n */\nexport async function reauthenticateWithPopup(user, provider, resolver) {\n  return user.reauthenticateWithPopup(provider, resolver);\n}\n\n/*\n * Reauthenticates the current user with the specified OAuthProvider using a full-page redirect flow.\n */\nexport async function reauthenticateWithRedirect(user, provider, resolver) {\n  return user.reauthenticateWithRedirect(provider, resolver);\n}\n\n/*\n * Reloads user account data, if signed in.\n */\nexport async function reload(user) {\n  return user.reload();\n}\n\n/*\n * Sends a verification email to a user.\n */\nexport async function sendEmailVerification(user, actionCodeSettings) {\n  return user.sendEmailVerification(actionCodeSettings);\n}\n\n/*\n * Unlinks a provider from a user account.\n */\nexport async function unlink(user, providerId) {\n  return user.unlink(providerId);\n}\n\n/*\n * Updates the user's email address.\n */\nexport async function updateEmail(user, newEmail) {\n  return user.updateEmail(newEmail);\n}\n\n/*\n * Updates the user's password.\n */\nexport async function updatePassword(user, newPassword) {\n  return user.updatePassword(newPassword);\n}\n\n/*\n * Updates the user's phone number.\n */\nexport async function updatePhoneNumber(user, credential) {\n  return user.updatePhoneNumber(credential);\n}\n\n/*\n * Updates a user's profile data.\n */\nexport async function updateProfile(user, { displayName, photoURL: photoUrl }) {\n  return user.updateProfile({ displayName, photoURL: photoUrl });\n}\n\n/*\n * Sends a verification email to a new email address.\n */\nexport async function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\n  return user.verifyBeforeUpdateEmail(newEmail, actionCodeSettings);\n}\n\n/*\n * Extracts provider specific AdditionalUserInfo for the given credential.\n */\nexport function getAdditionalUserInfo(userCredential) {\n  return userCredential.additionalUserInfo;\n}\n\nexport function getCustomAuthDomain(auth) {\n  const _auth = _getUnderlyingAuth(auth);\n  return _auth.getCustomAuthDomain();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}