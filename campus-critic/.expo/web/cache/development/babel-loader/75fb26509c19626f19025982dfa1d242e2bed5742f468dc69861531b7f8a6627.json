{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar PhoneMultiFactorGenerator = function () {\n  function PhoneMultiFactorGenerator() {\n    _classCallCheck(this, PhoneMultiFactorGenerator);\n    throw new Error('`new PhoneMultiFactorGenerator()` is not supported on the native Firebase SDKs.');\n  }\n  _createClass(PhoneMultiFactorGenerator, null, [{\n    key: \"assertion\",\n    value: function assertion(credential) {\n      var token = credential.token,\n        secret = credential.secret;\n      return {\n        token: token,\n        secret: secret\n      };\n    }\n  }]);\n  return PhoneMultiFactorGenerator;\n}();\nPhoneMultiFactorGenerator.FACTOR_ID = 'phone';\nexport { PhoneMultiFactorGenerator as default };","map":{"version":3,"names":["PhoneMultiFactorGenerator","_classCallCheck","Error","_createClass","key","value","assertion","credential","token","secret","FACTOR_ID","default"],"sources":["C:/Users/Blake/Desktop/VS-Code-Projects/Campus_Critic/campus-critic/node_modules/@react-native-firebase/auth/lib/PhoneMultiFactorGenerator.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport default class PhoneMultiFactorGenerator {\n  static FACTOR_ID = 'phone';\n\n  constructor() {\n    throw new Error(\n      '`new PhoneMultiFactorGenerator()` is not supported on the native Firebase SDKs.',\n    );\n  }\n\n  static assertion(credential) {\n    // There is no logic here, we mainly do this for API compatibility\n    // (following the Web API).\n    const { token, secret } = credential;\n    return { token, secret };\n  }\n}\n"],"mappings":";;IAiBqBA,yBAAyB;EAG5C,SAAAA,0BAAA,EAAc;IAAAC,eAAA,OAAAD,yBAAA;IACZ,MAAM,IAAIE,KAAK,CACb,iFACF,CAAC;EACH;EAACC,YAAA,CAAAH,yBAAA;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAC,UAAiBC,UAAU,EAAE;MAG3B,IAAQC,KAAK,GAAaD,UAAU,CAA5BC,KAAK;QAAEC,MAAM,GAAKF,UAAU,CAArBE,MAAM;MACrB,OAAO;QAAED,KAAK,EAALA,KAAK;QAAEC,MAAM,EAANA;MAAO,CAAC;IAC1B;EAAC;EAAA,OAAAT,yBAAA;AAAA;AAdkBA,yBAAyB,CACrCU,SAAS,GAAG,OAAO;AAAA,SADPV,yBAAyB,IAAAW,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}