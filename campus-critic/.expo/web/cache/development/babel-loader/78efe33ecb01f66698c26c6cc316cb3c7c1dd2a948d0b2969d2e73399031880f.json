{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar providerId = 'phone';\nvar PhoneAuthProvider = function () {\n  function PhoneAuthProvider(auth) {\n    _classCallCheck(this, PhoneAuthProvider);\n    if (auth === undefined) {\n      throw new Error('`new PhoneAuthProvider()` is not supported on the native Firebase SDKs.');\n    }\n    this._auth = auth;\n  }\n  _createClass(PhoneAuthProvider, [{\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneInfoOptions, appVerifier) {\n      if (phoneInfoOptions.multiFactorHint) {\n        return this._auth.app.auth().verifyPhoneNumberWithMultiFactorInfo(phoneInfoOptions.multiFactorHint, phoneInfoOptions.session);\n      }\n      return this._auth.app.auth().verifyPhoneNumberForMultiFactor(phoneInfoOptions);\n    }\n  }], [{\n    key: \"PROVIDER_ID\",\n    get: function get() {\n      return providerId;\n    }\n  }, {\n    key: \"credential\",\n    value: function credential(verificationId, code) {\n      return {\n        token: verificationId,\n        secret: code,\n        providerId: providerId\n      };\n    }\n  }]);\n  return PhoneAuthProvider;\n}();\nexport { PhoneAuthProvider as default };","map":{"version":3,"names":["providerId","PhoneAuthProvider","auth","_classCallCheck","undefined","Error","_auth","_createClass","key","value","verifyPhoneNumber","phoneInfoOptions","appVerifier","multiFactorHint","app","verifyPhoneNumberWithMultiFactorInfo","session","verifyPhoneNumberForMultiFactor","get","credential","verificationId","code","token","secret","default"],"sources":["C:/Users/Blake/Desktop/VS-Code-Projects/Campus_Critic/node_modules/@react-native-firebase/auth/lib/providers/PhoneAuthProvider.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst providerId = 'phone';\n\nexport default class PhoneAuthProvider {\n  constructor(auth) {\n    if (auth === undefined) {\n      throw new Error('`new PhoneAuthProvider()` is not supported on the native Firebase SDKs.');\n    }\n    this._auth = auth;\n  }\n\n  static get PROVIDER_ID() {\n    return providerId;\n  }\n\n  static credential(verificationId, code) {\n    return {\n      token: verificationId,\n      secret: code,\n      providerId,\n    };\n  }\n\n  verifyPhoneNumber(phoneInfoOptions, appVerifier) {\n    if (phoneInfoOptions.multiFactorHint) {\n      return this._auth.app\n        .auth()\n        .verifyPhoneNumberWithMultiFactorInfo(\n          phoneInfoOptions.multiFactorHint,\n          phoneInfoOptions.session,\n        );\n    }\n    return this._auth.app.auth().verifyPhoneNumberForMultiFactor(phoneInfoOptions);\n  }\n}\n"],"mappings":";;AAkBA,IAAMA,UAAU,GAAG,OAAO;AAAC,IAENC,iBAAiB;EACpC,SAAAA,kBAAYC,IAAI,EAAE;IAAAC,eAAA,OAAAF,iBAAA;IAChB,IAAIC,IAAI,KAAKE,SAAS,EAAE;MACtB,MAAM,IAAIC,KAAK,CAAC,yEAAyE,CAAC;IAC5F;IACA,IAAI,CAACC,KAAK,GAAGJ,IAAI;EACnB;EAACK,YAAA,CAAAN,iBAAA;IAAAO,GAAA;IAAAC,KAAA,EAcD,SAAAC,kBAAkBC,gBAAgB,EAAEC,WAAW,EAAE;MAC/C,IAAID,gBAAgB,CAACE,eAAe,EAAE;QACpC,OAAO,IAAI,CAACP,KAAK,CAACQ,GAAG,CAClBZ,IAAI,CAAC,CAAC,CACNa,oCAAoC,CACnCJ,gBAAgB,CAACE,eAAe,EAChCF,gBAAgB,CAACK,OACnB,CAAC;MACL;MACA,OAAO,IAAI,CAACV,KAAK,CAACQ,GAAG,CAACZ,IAAI,CAAC,CAAC,CAACe,+BAA+B,CAACN,gBAAgB,CAAC;IAChF;EAAC;IAAAH,GAAA;IAAAU,GAAA,EAtBD,SAAAA,IAAA,EAAyB;MACvB,OAAOlB,UAAU;IACnB;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAU,WAAkBC,cAAc,EAAEC,IAAI,EAAE;MACtC,OAAO;QACLC,KAAK,EAAEF,cAAc;QACrBG,MAAM,EAAEF,IAAI;QACZrB,UAAU,EAAVA;MACF,CAAC;IACH;EAAC;EAAA,OAAAC,iBAAA;AAAA;AAAA,SAlBkBA,iBAAiB,IAAAuB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}