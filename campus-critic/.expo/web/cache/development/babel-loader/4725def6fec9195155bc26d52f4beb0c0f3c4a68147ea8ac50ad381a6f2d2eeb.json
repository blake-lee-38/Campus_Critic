{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isAndroid, isFunction, isIOS, promiseDefer } from '@react-native-firebase/app/lib/common';\nimport NativeFirebaseError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nvar REQUEST_ID = 0;\nvar PhoneAuthListener = function () {\n  function PhoneAuthListener(auth, phoneNumber, timeout, forceResend) {\n    _classCallCheck(this, PhoneAuthListener);\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._jsStack = new Error().stack;\n    this._timeout = timeout || 20;\n    this._phoneAuthRequestId = REQUEST_ID++;\n    this._forceResending = forceResend || false;\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestId}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestId}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestId}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestId}:onCodeAutoRetrievalTimeout`\n    };\n    this._publicEvents = {\n      error: `phone:auth:${this._phoneAuthRequestId}:error`,\n      event: `phone:auth:${this._phoneAuthRequestId}:event`,\n      success: `phone:auth:${this._phoneAuthRequestId}:success`\n    };\n    this._subscribeToEvents();\n    if (isAndroid) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '', this._timeout, this._forceResending);\n    }\n    if (isIOS) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '');\n    }\n  }\n  _createClass(PhoneAuthListener, [{\n    key: \"_subscribeToEvents\",\n    value: function _subscribeToEvents() {\n      var _this = this;\n      var events = Object.keys(this._internalEvents);\n      var _loop = function _loop() {\n        var type = events[i];\n        var subscription = _this._auth.emitter.addListener(_this._internalEvents[type], function (event) {\n          _this[`_${type}Handler`](event);\n          subscription.remove();\n        });\n      };\n      for (var i = 0, len = events.length; i < len; i++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_addUserObserver\",\n    value: function _addUserObserver(observer) {\n      this._auth.emitter.addListener(this._publicEvents.event, observer);\n    }\n  }, {\n    key: \"_emitToObservers\",\n    value: function _emitToObservers(snapshot) {\n      this._auth.emitter.emit(this._publicEvents.event, snapshot);\n    }\n  }, {\n    key: \"_emitToErrorCb\",\n    value: function _emitToErrorCb(snapshot) {\n      var error = snapshot.error;\n      if (this._reject) {\n        this._reject(error);\n      }\n      this._auth.emitter.emit(this._publicEvents.error, error);\n    }\n  }, {\n    key: \"_emitToSuccessCb\",\n    value: function _emitToSuccessCb(snapshot) {\n      if (this._resolve) {\n        this._resolve(snapshot);\n      }\n      this._auth.emitter.emit(this._publicEvents.success, snapshot);\n    }\n  }, {\n    key: \"_removeAllListeners\",\n    value: function _removeAllListeners() {\n      var _this2 = this;\n      setTimeout(function () {\n        Object.values(_this2._internalEvents).forEach(function (event) {\n          _this2._auth.emitter.removeAllListeners(event);\n        });\n        Object.values(_this2._publicEvents).forEach(function (publicEvent) {\n          _this2._auth.emitter.removeAllListeners(publicEvent);\n        });\n      }, 0);\n    }\n  }, {\n    key: \"_promiseDeferred\",\n    value: function _promiseDeferred() {\n      if (!this._promise) {\n        var _promiseDefer = promiseDefer(),\n          promise = _promiseDefer.promise,\n          resolve = _promiseDefer.resolve,\n          reject = _promiseDefer.reject;\n        this._promise = promise;\n        this._resolve = resolve;\n        this._reject = reject;\n      }\n    }\n  }, {\n    key: \"_codeSentHandler\",\n    value: function _codeSentHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: null,\n        error: null,\n        state: 'sent'\n      };\n      this._emitToObservers(snapshot);\n      if (isIOS) {\n        this._emitToSuccessCb(snapshot);\n      }\n      if (isAndroid) {}\n    }\n  }, {\n    key: \"_codeAutoRetrievalTimeoutHandler\",\n    value: function _codeAutoRetrievalTimeoutHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: null,\n        error: null,\n        state: 'timeout'\n      };\n      this._emitToObservers(snapshot);\n      this._emitToSuccessCb(snapshot);\n    }\n  }, {\n    key: \"_verificationCompleteHandler\",\n    value: function _verificationCompleteHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: credential.code || null,\n        error: null,\n        state: 'verified'\n      };\n      this._emitToObservers(snapshot);\n      this._emitToSuccessCb(snapshot);\n      this._removeAllListeners();\n    }\n  }, {\n    key: \"_verificationFailedHandler\",\n    value: function _verificationFailedHandler(state) {\n      var snapshot = {\n        verificationId: state.verificationId,\n        code: null,\n        error: null,\n        state: 'error'\n      };\n      snapshot.error = new NativeFirebaseError({\n        userInfo: state.error\n      }, this._jsStack, 'auth');\n      this._emitToObservers(snapshot);\n      this._emitToErrorCb(snapshot);\n      this._removeAllListeners();\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, observer, errorCb, successCb) {\n      if (event !== 'state_changed') {\n        throw new Error(\"firebase.auth.PhoneAuthListener.on(*, _, _, _) 'event' must equal 'state_changed'.\");\n      }\n      if (!isFunction(observer)) {\n        throw new Error(\"firebase.auth.PhoneAuthListener.on(_, *, _, _) 'observer' must be a function.\");\n      }\n      this._addUserObserver(observer);\n      if (isFunction(errorCb)) {\n        var subscription = this._auth.emitter.addListener(this._publicEvents.error, function (event) {\n          subscription.remove();\n          errorCb(event);\n        });\n      }\n      if (isFunction(successCb)) {\n        var _subscription = this._auth.emitter.addListener(this._publicEvents.success, function (event) {\n          _subscription.remove();\n          successCb(event);\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"then\",\n    value: function then(fn) {\n      this._promiseDeferred();\n      if (this._promise) {\n        return this._promise.then.bind(this._promise)(fn);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(fn) {\n      this._promiseDeferred();\n      if (this._promise) {\n        return this._promise.catch.bind(this._promise)(fn);\n      }\n      return undefined;\n    }\n  }]);\n  return PhoneAuthListener;\n}();\nexport { PhoneAuthListener as default };","map":{"version":3,"names":["isAndroid","isFunction","isIOS","promiseDefer","NativeFirebaseError","REQUEST_ID","PhoneAuthListener","auth","phoneNumber","timeout","forceResend","_classCallCheck","_auth","_reject","_resolve","_promise","_jsStack","Error","stack","_timeout","_phoneAuthRequestId","_forceResending","_internalEvents","codeSent","verificationFailed","verificationComplete","codeAutoRetrievalTimeout","_publicEvents","error","event","success","_subscribeToEvents","native","verifyPhoneNumber","_createClass","key","value","_this","events","Object","keys","_loop","type","i","subscription","emitter","addListener","remove","len","length","_addUserObserver","observer","_emitToObservers","snapshot","emit","_emitToErrorCb","_emitToSuccessCb","_removeAllListeners","_this2","setTimeout","values","forEach","removeAllListeners","publicEvent","_promiseDeferred","_promiseDefer","promise","resolve","reject","_codeSentHandler","credential","verificationId","code","state","_codeAutoRetrievalTimeoutHandler","_verificationCompleteHandler","_verificationFailedHandler","userInfo","on","errorCb","successCb","then","fn","bind","undefined","_catch","catch","default"],"sources":["C:/Users/Blake/Desktop/VS-Code-Projects/Campus_Critic/node_modules/@react-native-firebase/auth/lib/PhoneAuthListener.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isAndroid, isFunction, isIOS, promiseDefer } from '@react-native-firebase/app/lib/common';\nimport NativeFirebaseError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\n\nlet REQUEST_ID = 0;\n\nexport default class PhoneAuthListener {\n  constructor(auth, phoneNumber, timeout, forceResend) {\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._jsStack = new Error().stack;\n\n    this._timeout = timeout || 20;\n    this._phoneAuthRequestId = REQUEST_ID++;\n    this._forceResending = forceResend || false;\n\n    // internal events\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestId}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestId}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestId}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestId}:onCodeAutoRetrievalTimeout`,\n    };\n\n    // user observer events\n    this._publicEvents = {\n      error: `phone:auth:${this._phoneAuthRequestId}:error`,\n      event: `phone:auth:${this._phoneAuthRequestId}:event`,\n      success: `phone:auth:${this._phoneAuthRequestId}:success`,\n    };\n\n    this._subscribeToEvents();\n\n    if (isAndroid) {\n      this._auth.native.verifyPhoneNumber(\n        phoneNumber,\n        this._phoneAuthRequestId + '',\n        this._timeout,\n        this._forceResending,\n      );\n    }\n\n    if (isIOS) {\n      this._auth.native.verifyPhoneNumber(phoneNumber, this._phoneAuthRequestId + '');\n    }\n  }\n\n  _subscribeToEvents() {\n    const events = Object.keys(this._internalEvents);\n\n    for (let i = 0, len = events.length; i < len; i++) {\n      const type = events[i];\n      const subscription = this._auth.emitter.addListener(this._internalEvents[type], event => {\n        this[`_${type}Handler`](event);\n        subscription.remove();\n      });\n    }\n  }\n\n  _addUserObserver(observer) {\n    this._auth.emitter.addListener(this._publicEvents.event, observer);\n  }\n\n  _emitToObservers(snapshot) {\n    this._auth.emitter.emit(this._publicEvents.event, snapshot);\n  }\n\n  _emitToErrorCb(snapshot) {\n    const { error } = snapshot;\n    if (this._reject) {\n      this._reject(error);\n    }\n    this._auth.emitter.emit(this._publicEvents.error, error);\n  }\n\n  _emitToSuccessCb(snapshot) {\n    if (this._resolve) {\n      this._resolve(snapshot);\n    }\n    this._auth.emitter.emit(this._publicEvents.success, snapshot);\n  }\n\n  _removeAllListeners() {\n    setTimeout(() => {\n      // move to next event loop - not sure if needed\n      // internal listeners\n      Object.values(this._internalEvents).forEach(event => {\n        this._auth.emitter.removeAllListeners(event);\n      });\n\n      // user observer listeners\n      Object.values(this._publicEvents).forEach(publicEvent => {\n        this._auth.emitter.removeAllListeners(publicEvent);\n      });\n    }, 0);\n  }\n\n  _promiseDeferred() {\n    if (!this._promise) {\n      const { promise, resolve, reject } = promiseDefer();\n      this._promise = promise;\n      this._resolve = resolve;\n      this._reject = reject;\n    }\n  }\n\n  /* --------------------------\n   --- INTERNAL EVENT HANDLERS\n   ---------------------------- */\n\n  _codeSentHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'sent',\n    };\n\n    this._emitToObservers(snapshot);\n\n    if (isIOS) {\n      this._emitToSuccessCb(snapshot);\n    }\n\n    if (isAndroid) {\n      // android can auto retrieve so we don't emit to successCb immediately,\n      // if auto retrieve times out then that will emit to successCb\n    }\n  }\n\n  _codeAutoRetrievalTimeoutHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'timeout',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n  }\n\n  _verificationCompleteHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: credential.code || null,\n      error: null,\n      state: 'verified',\n    };\n\n    this._emitToObservers(snapshot);\n    this._emitToSuccessCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  _verificationFailedHandler(state) {\n    const snapshot = {\n      verificationId: state.verificationId,\n      code: null,\n      error: null,\n      state: 'error',\n    };\n\n    snapshot.error = new NativeFirebaseError({ userInfo: state.error }, this._jsStack, 'auth');\n\n    this._emitToObservers(snapshot);\n    this._emitToErrorCb(snapshot);\n    this._removeAllListeners();\n  }\n\n  /* -------------\n   -- PUBLIC API\n   --------------*/\n\n  on(event, observer, errorCb, successCb) {\n    if (event !== 'state_changed') {\n      throw new Error(\n        \"firebase.auth.PhoneAuthListener.on(*, _, _, _) 'event' must equal 'state_changed'.\",\n      );\n    }\n\n    if (!isFunction(observer)) {\n      throw new Error(\n        \"firebase.auth.PhoneAuthListener.on(_, *, _, _) 'observer' must be a function.\",\n      );\n    }\n\n    this._addUserObserver(observer);\n\n    if (isFunction(errorCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.error, event => {\n        subscription.remove();\n        errorCb(event);\n      });\n    }\n\n    if (isFunction(successCb)) {\n      const subscription = this._auth.emitter.addListener(this._publicEvents.success, event => {\n        subscription.remove();\n        successCb(event);\n      });\n    }\n\n    return this;\n  }\n\n  then(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.then.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n\n  catch(fn) {\n    this._promiseDeferred();\n    if (this._promise) {\n      return this._promise.catch.bind(this._promise)(fn);\n    }\n    return undefined;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}