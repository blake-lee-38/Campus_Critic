{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar RNGoogleSignin = NativeModules.RNGoogleSignin;\nvar IS_IOS = Platform.OS === 'ios';\nvar GoogleSignin = function () {\n  function GoogleSignin() {\n    _classCallCheck(this, GoogleSignin);\n    if (__DEV__ && !RNGoogleSignin) {\n      throw new Error(`RN GoogleSignin native module is not correctly linked. Please read the readme, setup and troubleshooting instructions carefully.\\nIf you are using Expo, make sure you are using Custom dev client, not Expo go.`);\n    }\n  }\n  _createClass(GoogleSignin, [{\n    key: \"signIn\",\n    value: function () {\n      var _signIn = _asyncToGenerator(function* () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        yield this.configPromise;\n        return yield RNGoogleSignin.signIn(options);\n      });\n      function signIn() {\n        return _signIn.apply(this, arguments);\n      }\n      return signIn;\n    }()\n  }, {\n    key: \"hasPlayServices\",\n    value: function () {\n      var _hasPlayServices = _asyncToGenerator(function* () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          showPlayServicesUpdateDialog: true\n        };\n        if (IS_IOS) {\n          return true;\n        } else {\n          if (options && options.showPlayServicesUpdateDialog === undefined) {\n            throw new Error('RNGoogleSignin: Missing property `showPlayServicesUpdateDialog` in options object for `hasPlayServices`');\n          }\n          return RNGoogleSignin.playServicesAvailable(options.showPlayServicesUpdateDialog);\n        }\n      });\n      function hasPlayServices() {\n        return _hasPlayServices.apply(this, arguments);\n      }\n      return hasPlayServices;\n    }()\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (options.offlineAccess && !options.webClientId) {\n        throw new Error('RNGoogleSignin: offline use requires server web ClientID');\n      }\n      this.configPromise = RNGoogleSignin.configure(options);\n    }\n  }, {\n    key: \"addScopes\",\n    value: function () {\n      var _addScopes = _asyncToGenerator(function* (options) {\n        if (IS_IOS) {\n          return RNGoogleSignin.addScopes(options);\n        } else {\n          var hasUser = yield RNGoogleSignin.addScopes(options);\n          if (!hasUser) {\n            return null;\n          }\n          return this.signInSilently();\n        }\n      });\n      function addScopes(_x) {\n        return _addScopes.apply(this, arguments);\n      }\n      return addScopes;\n    }()\n  }, {\n    key: \"signInSilently\",\n    value: function () {\n      var _signInSilently = _asyncToGenerator(function* () {\n        yield this.configPromise;\n        return RNGoogleSignin.signInSilently();\n      });\n      function signInSilently() {\n        return _signInSilently.apply(this, arguments);\n      }\n      return signInSilently;\n    }()\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator(function* () {\n        return RNGoogleSignin.signOut();\n      });\n      function signOut() {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n  }, {\n    key: \"revokeAccess\",\n    value: function () {\n      var _revokeAccess = _asyncToGenerator(function* () {\n        return RNGoogleSignin.revokeAccess();\n      });\n      function revokeAccess() {\n        return _revokeAccess.apply(this, arguments);\n      }\n      return revokeAccess;\n    }()\n  }, {\n    key: \"isSignedIn\",\n    value: function () {\n      var _isSignedIn = _asyncToGenerator(function* () {\n        return RNGoogleSignin.isSignedIn();\n      });\n      function isSignedIn() {\n        return _isSignedIn.apply(this, arguments);\n      }\n      return isSignedIn;\n    }()\n  }, {\n    key: \"getCurrentUser\",\n    value: function () {\n      var _getCurrentUser = _asyncToGenerator(function* () {\n        return RNGoogleSignin.getCurrentUser();\n      });\n      function getCurrentUser() {\n        return _getCurrentUser.apply(this, arguments);\n      }\n      return getCurrentUser;\n    }()\n  }, {\n    key: \"clearCachedAccessToken\",\n    value: function () {\n      var _clearCachedAccessToken = _asyncToGenerator(function* (tokenString) {\n        if (!tokenString || typeof tokenString !== 'string') {\n          return Promise.reject('GoogleSignIn: clearCachedAccessToken() expects a string token.');\n        }\n        return IS_IOS ? null : yield RNGoogleSignin.clearCachedAccessToken(tokenString);\n      });\n      function clearCachedAccessToken(_x2) {\n        return _clearCachedAccessToken.apply(this, arguments);\n      }\n      return clearCachedAccessToken;\n    }()\n  }, {\n    key: \"getTokens\",\n    value: function () {\n      var _getTokens = _asyncToGenerator(function* () {\n        if (IS_IOS) {\n          var tokens = yield RNGoogleSignin.getTokens();\n          return tokens;\n        } else {\n          var userObject = yield RNGoogleSignin.getTokens();\n          return {\n            idToken: userObject.idToken,\n            accessToken: userObject.accessToken\n          };\n        }\n      });\n      function getTokens() {\n        return _getTokens.apply(this, arguments);\n      }\n      return getTokens;\n    }()\n  }]);\n  return GoogleSignin;\n}();\nexport var GoogleSigninSingleton = new GoogleSignin();\nexport var statusCodes = {\n  SIGN_IN_CANCELLED: RNGoogleSignin.SIGN_IN_CANCELLED,\n  IN_PROGRESS: RNGoogleSignin.IN_PROGRESS,\n  PLAY_SERVICES_NOT_AVAILABLE: RNGoogleSignin.PLAY_SERVICES_NOT_AVAILABLE,\n  SIGN_IN_REQUIRED: RNGoogleSignin.SIGN_IN_REQUIRED\n};","map":{"version":3,"names":["RNGoogleSignin","NativeModules","IS_IOS","Platform","OS","GoogleSignin","_classCallCheck","__DEV__","Error","_createClass","key","value","_signIn","_asyncToGenerator","options","arguments","length","undefined","configPromise","signIn","apply","_hasPlayServices","showPlayServicesUpdateDialog","playServicesAvailable","hasPlayServices","configure","offlineAccess","webClientId","_addScopes","addScopes","hasUser","signInSilently","_x","_signInSilently","_signOut","signOut","_revokeAccess","revokeAccess","_isSignedIn","isSignedIn","_getCurrentUser","getCurrentUser","_clearCachedAccessToken","tokenString","Promise","reject","clearCachedAccessToken","_x2","_getTokens","tokens","getTokens","userObject","idToken","accessToken","GoogleSigninSingleton","statusCodes","SIGN_IN_CANCELLED","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE","SIGN_IN_REQUIRED"],"sources":["C:\\Users\\Blake\\Desktop\\VS-Code-Projects\\Campus_Critic\\campus-critic\\node_modules\\@react-native-google-signin\\google-signin\\src\\GoogleSignin.ts"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\nimport type {\n  AddScopesParams,\n  SignInParams,\n  ConfigureParams,\n  HasPlayServicesParams,\n  User,\n} from './types';\n\nconst { RNGoogleSignin } = NativeModules;\n\nconst IS_IOS = Platform.OS === 'ios';\n\nclass GoogleSignin {\n  configPromise?: Promise<void>;\n\n  constructor() {\n    if (__DEV__ && !RNGoogleSignin) {\n      throw new Error(\n        `RN GoogleSignin native module is not correctly linked. Please read the readme, setup and troubleshooting instructions carefully.\\nIf you are using Expo, make sure you are using Custom dev client, not Expo go.`,\n      );\n    }\n  }\n\n  async signIn(options: SignInParams = {}): Promise<User> {\n    await this.configPromise;\n    return await RNGoogleSignin.signIn(options);\n  }\n\n  async hasPlayServices(\n    options: HasPlayServicesParams = { showPlayServicesUpdateDialog: true },\n  ): Promise<boolean> {\n    if (IS_IOS) {\n      return true;\n    } else {\n      if (options && options.showPlayServicesUpdateDialog === undefined) {\n        throw new Error(\n          'RNGoogleSignin: Missing property `showPlayServicesUpdateDialog` in options object for `hasPlayServices`',\n        );\n      }\n      return RNGoogleSignin.playServicesAvailable(options.showPlayServicesUpdateDialog);\n    }\n  }\n\n  configure(options: ConfigureParams = {}): void {\n    if (options.offlineAccess && !options.webClientId) {\n      throw new Error('RNGoogleSignin: offline use requires server web ClientID');\n    }\n\n    this.configPromise = RNGoogleSignin.configure(options);\n  }\n\n  async addScopes(options: AddScopesParams): Promise<User | null> {\n    if (IS_IOS) {\n      return RNGoogleSignin.addScopes(options);\n    } else {\n      const hasUser = await RNGoogleSignin.addScopes(options);\n      if (!hasUser) {\n        return null;\n      }\n      // on Android, the user returned in onActivityResult() will contain only the scopes added, not the ones present previously\n      // we work around it by calling signInSilently() which returns the user object with all scopes\n      return this.signInSilently();\n    }\n  }\n\n  async signInSilently(): Promise<User> {\n    await this.configPromise;\n    return RNGoogleSignin.signInSilently();\n  }\n\n  async signOut(): Promise<null> {\n    return RNGoogleSignin.signOut();\n  }\n\n  async revokeAccess(): Promise<null> {\n    return RNGoogleSignin.revokeAccess();\n  }\n\n  async isSignedIn(): Promise<boolean> {\n    return RNGoogleSignin.isSignedIn();\n  }\n\n  async getCurrentUser(): Promise<User | null> {\n    return RNGoogleSignin.getCurrentUser();\n  }\n\n  async clearCachedAccessToken(tokenString: string): Promise<null> {\n    if (!tokenString || typeof tokenString !== 'string') {\n      return Promise.reject('GoogleSignIn: clearCachedAccessToken() expects a string token.');\n    }\n    return IS_IOS ? null : await RNGoogleSignin.clearCachedAccessToken(tokenString);\n  }\n\n  async getTokens(): Promise<{ idToken: string; accessToken: string }> {\n    if (IS_IOS) {\n      const tokens = await RNGoogleSignin.getTokens();\n      return tokens;\n    } else {\n      const userObject = await RNGoogleSignin.getTokens();\n      return {\n        idToken: userObject.idToken,\n        accessToken: userObject.accessToken,\n      };\n    }\n  }\n}\n\nexport const GoogleSigninSingleton = new GoogleSignin();\n\nexport const statusCodes = {\n  SIGN_IN_CANCELLED: RNGoogleSignin.SIGN_IN_CANCELLED as string,\n  IN_PROGRESS: RNGoogleSignin.IN_PROGRESS as string,\n  PLAY_SERVICES_NOT_AVAILABLE: RNGoogleSignin.PLAY_SERVICES_NOT_AVAILABLE as string,\n  SIGN_IN_REQUIRED: RNGoogleSignin.SIGN_IN_REQUIRED as string,\n} as const;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}